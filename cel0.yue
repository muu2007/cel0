import 'macros' as {$}
_G.PROJECTNAME, _G.VERSION = $FILE\sub(1,-5), "0.1c(#{$DATE})"
-- import 'utf8'
import 'lib.lume'
import 'utl' as :issubclass, :play
import 'lib.maid64' -- 改造して高解像度を初期値にした
-- require 'lib.gifcat' -- 全部に?入れているので、ここ消すだけで使わなくなる
import 'ui' as :Scene, :BGM, :Watchdog
import 'input' as :input, :SoftGamepad
import 'lib.tween' -- 改造してdelayを可能にした
import 'color' as :pico8palette
import 'bigmap' as :Map
import 'lib.bump'
vudu = if DEBUGMODE then require 'lib.vudu' else nil
if DEBUGMODE then require 'lib.inspect'
local *

love.window.setTitle(PROJECTNAME .. ' - v' .. VERSION)
love.window.setMode(800, 512, if 'Android' == love.system.getOS() then {fullscreen: true, msaa:2} else {resizable: true, msaa: 2}) -- レトロ画面をコピーするだけならanti alias不要。gamepad描いているのでmsaaつけた
maid64.setup(128, 128)
-- maid64.canvas\setFilter('nearest') -- retro表現
love.mouse.getPosition = maid64.mouse.getPosition -- プログラム全体としてmaid64の座標系を使うことにする
love.touch.getPosition0 = love.touch.getPosition -- 保存
love.touch.getPosition = (id)-> maid64.transformPosition(love.touch.getPosition0(id))
maid64.clearBG = -> gr.clear(gr.uipalette.text)
os.lang = nil -- i18nを無効
love.audio.setVolume(.65)

input.BXYp = -> input.Bp() or input.Xp() or input.Yp()
-- maid64.canvasの外(screen)に描く→描画時に位置などを調整
softgamepad = SoftGamepad(SoftGamepad.LURDABButtons128)
-- @diagnostic disable-next-line: duplicate-set-field
love.draw = ->
	love.draw1()
	softgamepad.font, font = gr.newFlyweightFont($FONT1SUBSET, 14*maid64.scaler), softgamepad.font
	softgamepad.buttons, buttons = {k, {x*maid64.scaler+maid64.x, y*maid64.scaler+maid64.y, r*maid64.scaler,label,pie} for k, {x,y,r,label,pie} in pairs softgamepad.buttons}, softgamepad.buttons
	softgamepad\draw()
	softgamepad.font, softgamepad.buttons = font, buttons


LevelData =
	*
		subtitle: '100 M'
		-- bgm:
		startpos: {8, 96}
		setup: ->
			Cloud(0, 64, 0.3)
			unless lume.find(love.strawberrys, '100 M') then Strawberry(12, 36), BreakableWall(8, 32)
		field: $to2d[[
&(!!!!!)))))*  #
!&()))*g  ag   #
!!&/cab   f   |#
))*aaag     }//#
& aaagdae   +0%!
'daaacag      (!
!%00-aa      da#
!*baag       ab#
'  fa    dadaaa#
*   ah   acaa+%!
   daab~daaaba#!
   abaa$&a  fa#!
  d$&af(*gEAAA#!
%%%!'g $&AA$%%!!
!"!!'AA#!%%!!!"!
!!!!!%%!!!!!!!!!]]
	*
		subtitle: '200 M'
		startpos: {8, 112}
		field: $to2d[[
!'#!!'()))!'aaa#
!'())*aa a#'fca#
!!&/cagg a#' db#
"!'aag   f#*  f#
!"'g      1    #
!)*    A  .   ~#
' | de ,      $!
!&//cg 1e     #"
!!%&ae .a e da()
!!"'faa/aaabaa$%
"!!' fa,g faa+)!
))!' da1    faa#
 a('dbg1      f(
 fb.ag 1AAA   da
  faae}#%%&   ba
%%%%%%%!!"'e daa]]
	*
		subtitle: '300 M'
		startpos: {8, 104}
		setup: -> unless lume.find(love.strawberrys, '300 M') then Strawberry(8, 48)
		field: $to2d[[
!!!!!!)*abaa(!!!
!"!!!' faagac#"!
!!!"!*  g  f (!!
!)!!'         (!
* (!*|}        (
   .$%&         
    #!'AAAAh   y
   d())000-aa  z
   aaaaa//aaae$%
  dabacg  faba#!
   faaa    aca#!
     faAAAAaaa#"
      a+%%-gf #!
  }   fa#'g   #!
%%&  E f#'   E#!
!"'  ,  #'   $!!]]
	*
		subtitle: '400 M'
		startpos: {8, 96}
		setup: -> unless lume.find(love.strawberrys, '400 M') then FlatteringStrawberry(16, 32)
		field: $to2d[[
))))*   ()))))))
aaag    aag     
abg  dh ba      
g    $%&aa      
   dd(!'/ae     
e haaa#'ag      
abaaab(*a   DD  
aaaaca$&g       
ag faa#'        
f   ab#'   DD   
    fa#'        
   daa(*      DD
~ dbagf         
%%%&g       DD  
!!!'    DD      
!!"'DD          ]]
	*
		subtitle: '500 M'
		startpos: {8, 88}
		setup: -> unless lume.find(love.strawberrys, '500 M') then Key(56, 112), Chest(116, 96)
		field: $to2d[[
)*   #)))*()))!!
ac   .ag    fa("
bae~ da      a #
faa+0-g      ae#
 caaag    AAdaa(
faag      $&abag
 f    AA  #'cag 
      +- d#'aa  
      /baa(!&   
      ,aafa(*e  
      .a   faae 
  }   /g    ba  
000-  /     fae 
fa/e d/  d +0000
 b/aea,  ahd/aaa
 f/aca1 daaa/aaa]]
	*
		subtitle: '600 M'
		startpos: {8, 88}
		setup: -> Balloon(64, 64)
		field: $to2d[[
!!!!!!!!!!!'aa#!
!!!!!!!!)))*aa#!
!!)))))*$%%&aa#!
!'$%&/$&())*aa#!
)*#!'c(*/aaaab#!
aa()*aag f faa#!
aaCCCaa     f$!"
bae   fg     ())
aaag     de daa 
ag       faaaag 
a           aa  
a da       dag  
%%&aaaaa  haba  
!!!%%%&faaacaa$%
!"!!!!' aa$%%%!!
!!!!"!'  f#!!!!!]]
	*
		subtitle: '700 M'
		startpos: {16, 112}
		setup: ->
			unless lume.find(love.strawberrys, '700 M') then FlatteringStrawberry(80, 16)
			Cloud(64, 40,  0.1), Cloud(128, 40,  0.1), Cloud(64, 64, -0.1), Cloud(128, 64, -0.1), Cloud(0, 88, 0.1), Cloud(42, 88, 0.1), Cloud(85, 88, 0.1), Cloud(0, 104, -0.1), Cloud(42, 104, -0.1), Cloud(85, 104, -0.1)
		field: $to2d[[
!!!!!'    #!"!!!
!!!!)*    ()!!"!
!!)*        ()!!
"'B          @#!
!'B          @#!
!*B    AA    @("
'     @+-B     #
'              #
*              (
                
                
                
                
                
   |            
 $%&           h]]
	*
		subtitle: '800 M'
		startpos: {8, 112}
		setup: -> Balloon(48, 24)
		field: $to2d[[
'aaaa()))!"!!!!!
'aaaaaffa())))!!
'abaag  faaaba#"
'aaa     aaaaa#!
'faah   faabaa#!
'Aac    daaaaa#!
!&aadh daaag f()
!*aaab aaae   D 
*aaaaadaaaa   D 
aaabaaaaaag     
faaaacaaaah     
  faaaaagaag    
  faafg   c F   
y  ab    fae   a
z daa DDD da  da
%%%&ah    aae ab]]
	*
		subtitle: '900 M'
		startpos: {16, 96}
		setup: ->
			unless lume.find(love.strawberrys, '900 M') then _, _ = Strawberry(56+4, 8+4), BreakableWall(56, 8)
			Balloon(24, 24+8), Balloon(64, 24+8)
		field: $to2d[[
!)*   #)))))))!!
'aa   1gfaaaaa#!
*ae   .  fba f#"
aacg      aae #!
aaa      faaa #!
aba       dag #!
aaahh    dab  ()
aaaacg  aaaah  a
ag  f    fbfg da
ad        a   aa
bg       dcg  ab
g         f   ag
      AAA     fd
AA/AAA$%&   EE f
%%%%%&#"'AAA//AA
!"!!!'#!'$%%%%%%]]
	*
		subtitle: '1000M'
		startpos: {8, 104}
		-- setup: ->
		field: $to2d[[
!!'aaaa#!))))!"!
!"'abaa(*bag ()!
!!'aaaa/agf   f(
!!'ag a/h       
!!',  f/g       
"!'.   g       d
))*/         ,aa
000-AA      A1ab
aaa+-/      /1aa
abcgf       f.ca
aaa          faa
agf           af
g            fa 
              g 
 ,e  DD   DD    
d1b            h]]
	*
		subtitle: '1100M'
		startpos: {8, 112}
		setup: -> Cloud(128, 72, -.4), Balloon(32, 8)
		field: $to2d[[
!)))))))!'aaa#!!
'a   daa(*aab#!!
*aAAAaaa  a f(!!
bc$%&abg dcg f#!
a+!!*gf   f AA#!
g@#'ae     @$%!!
 @#'g      @(!"!
 @(*        a()!
  f   AA     aa(
AAAAAA$-    fab 
%00000*      aae
*abaag       caa
aag f        aaa
g         fedaf 
      DD   aabed
 DD       daaaaa]]
	*
		subtitle: 'OLD SITE'
		startpos: {16, 104}
		setup: -> unless lume.find(love.strawberrys, 'OLD SITE') then FlatteringStrawberry(96, 72)
		field: $to2d[[
!!!*           3
"!'            3
!!'            3
))*h          42
%&aa  yuvy   422
!'bah zwxz455299
!*aaae$%%&322:  
'faaca#!!'89:   
' g fa#"!!&     
'    $!!!!'     
*    ()!!!*     
    456#!'ae    
    327#"'aa    
    327#!'achde 
 $%&327#!*aaabg 
 #!'327#'aaaaaae]]
	*
		subtitle: '1300M'
		startpos: {0, 104}
		setup: ->
			unless lume.find(love.strawberrys, '1300M') then _, _ = Key(40, 112), Chest(108, 112)
			Balloon(8, 64), Balloon(32, 8), Balloon(80, 24+4)
		field: $to2d[[
!!))))*())))*ag 
!'       fcaabe 
!'    AA   gfag           
!'e   $&     $%%
!'a  d#'     #!!
)*ae a#'AAAAA#!!
gafaba()0000%!"!
   aaag     ()!!
e dag        a()
aaac     A  fbag
abag    @/B haa 
a f  A   C f/cgy
g   @/Be    g  z
 |   fbg A     $
%&B   ae@,     #
!'B  dac@1   $%!]]
	*
		subtitle: '1400M'
		startpos: {0, 104}
		setup: -> unless lume.find(love.strawberrys, '1400M') then Strawberry(16, 8)
		field: $to2d[[
'agae     aa()))
'a b/e|    fbaaa
'ada/c/AAA$%&aac          
!%%&$%&$%&#"'aaa
!!!'()*()*#!'/ab
!!!'/CCCCC#!'aaa
!!!!&     ()*aca
!!!!'h    /  faa
!!!!'bg   D   da
!!!!'a    D  f$%
))))*g        (!
CCCC          c(
              aa
        dh    fb
&   E   ag     a
'   ,  da      a]]
	*
		subtitle: '1500M'
		startpos: {56, 104}
		setup: ->
			unless lume.find(love.strawberrys, '1500M') then _, _ = Key(24, 72), Chest(52, 40)
			Balloon(16, 88)
		field: $to2d[[
!!!)*aa (!!"!!!"
!!'aaag @#!)))))
!!'aba  @#'B ffb
))*aaah @(*B   a
%%&agaa  ag     
!!'  fa dg      
"!'AAA+0-AAAA   
!!)000%%%%%0-e  
)*cag@#"!!'aaa  
aag  @#!!"'aagF 
ag   @())!'ba   
a     CCC(*ach  
ae       CCfag  
aaaad      da   
aacaah DDDDaae  
abaaaae   daba d]]
	*
		subtitle: '1600M'
		startpos: {0, 96}
		setup: -> Balloon(112, 32)
		field: $to2d[[
!!"'aba())))))!"
)))*aaaaaacaa/(!
aaaaag fa aabaa(
cag     g faaag 
ab AA  F   agf  
ag@$&     Aah   
  @(*AAAAA,ag  @
  @+00000-1b   D
  @/      1a   D
   C      1g   @
       A  .     
   A  e,  C     
   ,e b1        
$& .aga1        
()e,cFa.        
%&b1a a,       d]]
	*
		subtitle: '1700M'
		startpos: {16, 104}
		setup: -> unless lume.find(love.strawberrys, '1700M') then Strawberry(4, 116), BreakableWall(0, 112)
		field: $to2d[[
g       a#!!!!"!
       da#"!!!!!
      fca()!!"!!
        faa#!!!"
       edaa#!!!!
       faba#"!!!
        aaa())))
   AAAAdaacCCCCC
  h$%%&abaae    
  c()!!%000-    
  faa()'CCCC    
   abg@1     E  
   fa @.    d,  
    a  a   fa1  
  $%&B beE hb1e 
%&#!!Bdaa,aac1aa]]
	*
		subtitle: '1800M'
		startpos: {8, 96}
		setup: -> Cloud(120, 112, -.3), Balloon(16, 8),  Balloon(16, 32),  Balloon(64, 40),  Balloon(112, 40),  Balloon(112, 64)
		field: $to2d[[
*g  ()))!)))))!)
C   CCCC1CCCCC1C
        .     . 
        C     C 
     A     A    
    @/Be  @/B   
a  d Cdae  C    
aeaae aa        
aaaaabag        
ab faaacee  A   
g    faaaae@,B  
       aaaa@1B  
     AAAAab@.B d
%%&AA$00-caag  b
!"!%%'  faaa  da
!!!!!'   aag  aa]]
	*
		subtitle: '1900M'
		startpos: {0, 112}
		setup: -> unless lume.find(love.strawberrys, '1900M') then Key(48, 112), Chest(84, 16)
		field: $to2d[[
g       @/  ())!
       AA/   fa#
      @+0-    c(
        @+0-e  C
A          /ca A
,ed        Cfae$
.abeA      Adaa(
C fa,A    @,aabC
A da.,    @.fagA
,aagC1e    C fa$
.ac A1ad   A aa(
Cfab,1ace  ,dagC
  aa.1g ab .ab A
  g C1  fa  aa $
    d.   ae ag (
&   bae  faca  C]]
	*
		subtitle: '2000M'
		startpos: {8, 80}
		setup: -> Balloon(32, 80), Balloon(56, 56), Balloon(120, 48), Balloon(120, 24)
		field: $to2d[[
!' fab#!!)))))))
!*   f()*  g  ba
'B            f 
'<<<<<<<<<<=A   
!%%%%%%%%%%%&B  
!!!!!!!)))))'B  
))))!!'ag fc.B  
%%%&()*   dg    
!!"'baf   f     
!)!'g      d    
' (*       ae   
'D      e  ba   
'e      a  aag  
'ag    dag aa   
'a     ab dac   
'be    aa aaae d]]
	*
		subtitle: '2100M'
		startpos: {8, 56}
		setup: -> Balloon(32, 96), Balloon(80, 96), Balloon(112, 100), Balloon(120, 64), Balloon(88, 48), Balloon(112, 24)
		field: $to2d[[
g      fcag ())!
      A  f     (
     @/B E      
   A  C @/B     
  @/B    C      
   C   A        
      @/B       
       C        
 /AAAAAAAAAAAA  
 +00000000000-B 
 /abaaa/aaaaa,B 
 CfaacaCfabfa.B 
   g fa  a  aa  
  d  aadaa  ag  
 faaagfaabaaa   
   ba   faca   d]]
	*
		subtitle: '2200M'
		startpos: {16, 104}
		field: $to2d[[
999:32227>   >32
    8999:>   >32
         ?   >89
             ?  
        e       
       da  d    
    hedaaaaae   
ahdaaacg  fcaded
aaafbaa     aaaa
aag aag qr dabaf
ba  fa| st}aag  
aae  a$%&$%&a  d
cg   /()*#!'a455
a    $%%%!"!&322
55555#!!"!!!'322
22222#!!!!"!'322]]
	*
		subtitle: '2300M'
		startpos: {32, 104}
		setup: -> unless lume.find(love.strawberrys, '2300M') then FlatteringStrawberry(112, 112)
		field: $to2d[[
!"!!'B      #!!!
!!!!'Bd     #!"!
!!!)*Bag AA/#!!!
!!*aaaacd$%%!!!!
"'aaabaaa())!"!!
!'aacf faag ()))
!'bag    f      
!'aae           
!'ag            
"'              
!'      e       
)*      ag      
        a   h   
       da  fc   
   $-  bae  a   
   146 aaa  ae d]]
	*
		subtitle: '2400M'
		startpos: {8, 112}
		-- setup: ->
		field: $to2d[[
'aaa#!"!!!"!!!!!
'aba()))))))!!"!
'cg ag    fa(!!!
'a  f AAA  ab#!!
'g   A456  fa#!"
'AAAA4227  @$!!!
!%%%&899:  @#!!!
!!"!!&     @#"!!
!!!!!'      #!!!
!"!!!'   AAA#!!!
!!!!"'  @#%&(!"!
)))))*  @#!!&(!!
baag    @#!"!&()
ag    e @#!!!!%%
a }~ da @#!!!"!!
%%%&cabe@#!!!!!!]]
	*
		subtitle: '2500M'
		startpos: {32, 104}
		setup: -> unless lume.find(love.strawberrys, '2500M') then Key(0, 80), Chest(44, 104)
		field: $to2d[[
!!!!!'BCCC())!' 
!!!!!'B   CCC#' 
!!!!!'B     f#'h
!!!))*B     a#'g
!!'$%&B de,Bf#'b
!!'#!'B fb1BF#'g
))*()'BE a1B (* 
a   f1A, f1B cce
g A  (0'B (00000
 @,B fb1B   fae@
 @1B  a1AAAA ab@
 @.B  f(000- ag@
e C    CCCCC g @
ag             @
ch d$%&AAAAA F @
abaa#!!%%%%&   @]]
	*
		subtitle: '2600M'
		startpos: {8, 104}
		setup: -> unless lume.find(love.strawberrys, '2600M') then Key(96, 112), Chest(116, 40)
		field: $to2d[[
!!))))))!!)))*aa
)*ah   a#*Bfacab
aabg  Af.B da,g 
acf  @, g   b1  
ag   @1    da1  
b    @1     f1~ 
ae de@1AAAAAA#%%
aaba+0)000000!!!
g f  caaaag @#!!
      fabah $!!!
AAAAA  ag ga#!!!
%%%%&AA/B  f()!!
)))))0-C    CC(!
e |  fa       a#
%%&e cae     dc(
!!'adaba     baa]]
	*
		subtitle: '2700M'
		startpos: {0, 112}
		setup: -> Balloon(48, 64), Balloon(96, 72)
		field: $to2d[[
!!!!!!!!!!"!)*Ba
!!!"!!))))!'CC b
!!!!!*CCCC(*   a
))!!'B    @,  da
%&()*B    @1ae f
!!%%&B    @1g   
!!"!'B  A @1B   
!!!!'B @, @1B   
))))'B @1 @1    
CCCC.B @1e@1    
   da  @1a@.    
   cbg @1aaa    
    a  @1abg    
   dah @1 fah   
  dbag @.  bg   
& caa   b  ac  d]]
	*
		subtitle: '2800M'
		startpos: {8, 8}
		setup: ->
			unless lume.find(love.strawberrys, '2800M') then _, _ = Key(112, 24), Chest(60, 16)
			Balloon(104, 104)
		field: $to2d[[
)))))!'aa  @#!!!
     #'bg  @#)))
000- #'g   @1aff
     #!%&B @.g  
     #!!'B      
     #!!'B      
aAAAA#!!'B      
g+000))!'B  A   
 CCCCC@#'B @,B  
      @#'BD@1B  
      @#'AAA1B  
AAAAe A#!%%%*B  
%%%&ab+))))*B   
!!!' aa dcaf   d
!!!' faaabg    a
!!!'DDaba     da]]
	*
		subtitle: '2900M'
		startpos: {0, 88}
		setup: ->
			unless lume.find(love.strawberrys, '2900M') then Strawberry(0, 16)
			Balloon(48, 32), Balloon(96, 56), Balloon(120, 48)
		field: $to2d[[
!!!!!!!!!!!!'ba#
)))))))))))!'ca(
 ag fabaaca#' fb
 c A gfagAf(* da
 f@/Bd a@/B A  a
   C faa C @/BAg
      Ach A C@/ 
     @/aab.B  C 
 A    C   .B    
@/BA   A  C    d
 C@/B @,B      a
   C  @1B     da
&     @.B    fca
'      C   edaba
'  E      daaaac
'ac,e    faabaaa]]
	*
		subtitle: '3000M'
		startpos: {8, 80}
		setup: ->
			unless lume.find(love.strawberrys, '3000M') then _, _ = Key(96,16), Chest(60, 8)
			Balloon(40, 112), Balloon(96, 96), Balloon(72, 48)
		field: $to2d[[
!!!!)*aag#!)))!!
!!)*CCcg (*baa#"
!'CC  b$&B   c#!
!'B   f(*B  ha#!
!'B    CC  fbf#!
!'B         g@#"
!'AAAA       @(!
!!&$%&B       C#
))*()*B  AA   @#
CCCCCC AA$&A  @#
B     @$%!)-B @(
BD    @#!*CC   C
AAAA  @(*C d    
%%%&B  CC  b   d
!!!'B   e  ad da
!!!'B  db dacaba]]
	*
		subtitle: 'SUMMIT'
		startpos: {4, 112-4}
		field: $to2d[[
p               
                
      d         
      c  e      
    d a  b      
    aha  c      
    aba{ ah     
    faa$&ab     
   hba$!!&aed   
   fa$!!!!&abh  
  dag#!!!!'caah 
acab ()!!!'g fa 
 fae}$&#!)*/  a 
  $%%!'(*$%&aeah
  (!!"!%%!!!&cba
$%&#!!!!!!"!!%%&]]


class _Charactor
	new: (@x, @y, @sprite, @z = 0)=>
		Scene.current.charactors[] = @

	update: (_dt)=> -- 動かないもののupdate

	checkCollision: => -- 動くものは当たり判定を調べる。(動かないものはPlayer側からの当たり判定だけで良い)
		if @terminated then return -- player側から触られてもう消されたもの
		@x, @y, _, n = Scene.current.world\move(@, @x, @y, (other)=> if other.__class == Player then 'cross') -- else nil
		if n > 0 then @betouched()

	registerSprite: (map)=>
		map.spritebatch\add(map.quads[@sprite], lume.round(@x), lume.round(@y))

class _Block extends _Charactor

class SideWall extends _Charactor
	new: (x, y)=>
		super(x, -16, 0x20)
		Scene.current.world\add(@, x, -16, 16, 128+16+16)
	
	betouched: => Scene.current.player.vx = 0

class Ceil extends _Charactor
	new: =>
		super(-16, -16, 0x20)
		Scene.current.world\add(@, -16, -16, 128+32, 15) -- 数ドットうえにした

	betouched: => Field(Scene.current.level+1) -- goal

class Floor extends _Charactor
	new: =>
		super(-16, 128, 0x20)
		Scene.current.world\add(@, -16, 128+8, 128+32, 16)
	betouched: => Scene.current.player\death()

class PlatformBlock extends _Block
	new: (x, y, sprite)=>
		super(x, y, sprite)
		if not lume.find({0x21, 0x22, 0x32}, sprite) then Scene.current.world\add(@, x, y, 8, 8) -- 内側のものはworldに登録しない

class BreakableWall extends _Block
	new: (x, y)=>
		super(x, y, 0x1c, 9)
		Scene.current.world\add(@, x, y, 16, 16)
	
	betouched: (col)=>
		if col.normal.x * Scene.current.player.vx < -Player.Max or col.normal.y * Scene.current.player.vy < -Player.Max
			-- print col.normal.x ,col.normal.y, Scene.current.player.vx, Scene.current.player.vy
			Scene.current.world\remove(@)
			@terminated = true
			Smoke(@x, @y), Smoke(@x+8, @y), Smoke(@x, @y+8), Smoke(@x+8, @y+8)

	registerSprite: (map)=>
		map.spritebatch\add(map.quads[0x1c], @x  , @y  )
		map.spritebatch\add(map.quads[0x1d], @x+8, @y  )
		map.spritebatch\add(map.quads[0x1e], @x  , @y+8)
		map.spritebatch\add(map.quads[0x1f], @x+8, @y+8)

class Spike extends _Charactor -- 方向別にするとCollisionのところがコードが増える
	new: (x, y, sprite)=>
		super(x, y, sprite)
		Scene.current.world\add(@, unpack rawget({[0x40]: {x+5, y, 3, 8}, [0x41]: {x, y+5, 8, 3}, [0x42]: {x, y, 3, 8}, [0x43]: {x, y, 8, 3}, }, sprite))
	betouched: (col)=>
		-- pp col.item.__class.__name, col.itemRect, col.other.__class.__name, col.otherRect, col.overlaps, col.ti, col.touch
		-- pp Scene.current.player.x
		if @sprite == 0x40 and col.normal.x < 0 then Scene.current.player\death()
		if @sprite == 0x41 and col.normal.y < 0 then Scene.current.player\death()
		if @sprite == 0x42 and col.normal.x > 0 then Scene.current.player\death()
		if @sprite == 0x43 and col.normal.y > 0 then Scene.current.player\death()
		-- 別方向からあたったとき無効にできるがすり抜けることもある
		-- 'slide'にすることで、壁上のトゲでデスすることを防げるはず

class JumpBlock extends _Block
	new: (x, y)=>
		super(x, y, 0x45)
		Scene.current.world\add(@, x, y, 8, 8)
		@starttime = 0

	betouched: =>
		if @starttime < love.frame_count
			play'assets/sounds/効果音ラボ/ボヨン.mp3'
			Scene.current.player\land()
			Scene.current.player\jump(-2.6) -- ジャンプ台をつかうと４ブロック
			@starttime = love.frame_count + 25
			@linkedFragileBlock?\betouched()

	registerSprite: (map)=>
		if @linkedFragileBlock?.sprite == 0x20 then return
		map.spritebatch\add(map.quads[if love.frame_count >= @starttime then 0x45 else 0x85], @x, @y)

-- 上にJumpBlockがある場合一緒に消える。生成時に@linkedXXXを設定する。
class FragileBlock extends _Block
	new: (x, y)=>
		super(x, y, 0x44)
		Scene.current.world\add(@, x, y, 8, 8)
		@time = 0

	update: (dt)=>
		@sprite = if @time < -2.25 then 0x44
		elseif @time < -2.083 then 0x84
		elseif @time < -1.91 then 0x94
		elseif @time < 0 then 0x20
		else 0x44
		if @time < -1.91 and @time+dt >= -1.91 then for c in *{@, @linkedJumpBlock} do Scene.current.world\remove(c)
		if @time < 0 and @time+dt >= 0 then
			if #Scene.current.world\queryRect(@x, @y, 8, 8) == 0 -- playerと重なっていないとき、復活させる
				_, _ = [Scene.current.world\add(c,x,y,w,h) for {c,x,y,w,h} in *{{@,@x,@y,8,8}, {@linkedJumpBlock,@x,@y-4,8,4}} when c], play'assets/sounds/効果音ラボ/パパッ.mp3'
			else @time -= dt -- playerと重なっているとき、待つ。
		@time += dt

	betouched: =>
		if @time >= 0 then @time, _ = -2.5, play'assets/sounds/効果音ラボ/カーソル移動12.mp3'

class Strawberry extends _Charactor
	new: (x, y)=>
		super(x, y, 0x01, 1)
		Scene.current.world\add(@, x, y, 8, 8)
		@time, @cy = 0, y

	update: (dt)=>
		@time += dt
		@y = @cy + math.cos(@time*5)*3--1.5*3.14)*3
		@checkCollision()
	
	betouched: =>
		play'assets/sounds/効果音ラボ/成功音.mp3'
		love.strawberrys[] = Scene.current.subtitle
		Scene.current.world\remove(@)
		@@._1000(@x, @y)
		@terminated = true

class Strawberry._1000 extends _Charactor -- Score Tooltip
	new: (x, y)=>
		super(x, y-5, nil, math.huge)
		@start = love.frame_count

	update: =>
		@y -= 0.2
		if love.frame_count - @start > 45 then @terminated = true

	registerSprite: (map)=>
		n = math.floor(love.frame_count / 4) % 2
		map.spritebatch\add(map.quads[0x82 + n*0x10], lume.round(@x  ), lume.round(@y))
		map.spritebatch\add(map.quads[0x83 + n*0x10], lume.round(@x+8), lume.round(@y))

class Key extends _Charactor
	new: (x, y)=>
		super(x, y, 0x0c)
		Scene.current.world\add(@, x, y, 8, 8)
	
	betouched: =>
		play'assets/sounds/効果音ラボ/決定ボタンを押す34.mp3'
		Scene.current.world\remove(@)
		for c in *Scene.current.charactors do c\player_gotakey?() -- 宝箱をイチゴにする(objectが100個程度なのでリンクを予め作っておくよりシンプルか？)
		@terminated = true
	
	registerSprite: (map)=>
		Info = {{0x0c}, {0x8c}, {0x9c}, {0x8c, -1,1,8}, {0x0c, -1,1,8}, {0x8c, -1,1,8}, {0x9c, -1,1,8}, {0x8c}}
		n = math.floor(love.frame_count / 10) % 8
		{id, a, b, c} = Info[n+1]
		map.spritebatch\add(map.quads[id], lume.round(@x), lume.round(@y), 0, a, b, c)

class Chest extends _Charactor -- 当たり判定なし
	new: (x, y)=>
		super(x, y, 0x0d)
	
	player_gotakey: =>
		play'assets/sounds/効果音ラボ/決定ボタンを押す20.mp3'
		Strawberry(@x, @y-4)
		@terminated = true

class FlatteringStrawberry extends Strawberry
	
	player_dashed: =>
		@tween = tween.new(1.0, @, {y: @y-128}, 'inCubic')
		@update = @updateSoaring

	updateSoaring: (dt)=>
		@tween\update(dt)
		@checkCollision()

	registerSprite: (map)=>
		super(map)
		map.spritebatch\add(map.quads[0x81], lume.round(@x-7), lume.round(@y))
		map.spritebatch\add(map.quads[0x81], lume.round(@x+7), lume.round(@y),0, -1,1,8)


class Balloon extends _Charactor
	new: (x, y)=>
		super(x, y, 0x0a, 1)
		Scene.current.world\add(@, x, y, 8, 8)
		@time, @cy = 0, y

	update: (dt)=>
		if @time < 0 and @time+dt >= 0 then _, _ = Scene.current.world\add(@, @x, @y, 8, 8), play'assets/sounds/効果音ラボ/パパッ.mp3'
		@time += dt
		if @time < 0 then return
		@y = @cy + math.cos(@time*5)*2--1.5*3.14)*3
		@checkCollision()
	
	betouched: =>
		Scene.current.player.boosts = Player.MaxBoosts
		Scene.current.world\remove(@)
		@time = -130/60
	
	registerSprite: (map)=>
		if @time < 0 then return
		super(map)
		n = math.floor(@time / 0.5) % 3
		map.spritebatch\add(map.quads[0x8a+n*0x10], lume.round(@x), lume.round(@y+8)) -- 紐は当たり判定なしのはず


class Cloud extends _Block
	@OY = 1
	new: (x, y, @dx)=>
		super(x, y+@@OY, 0x03, -9)
		Scene.current.world\add(@, x, y+@@OY, 16, 4)
		
	update: (dt)=>
		@x += @dx* dt*60
		if @x > 128 then @x -= 128+16
		if @x < -16 then @x += 128+16
		Scene.current.world\update(@, @x, @y, 16, 4)
		if Scene.current.player.vy >= 0 and #Scene.current.world\queryRect(@x, @y-Player.H, 16, 1, (c)-> c.__class == Player) > 0 -- todo 乗っているかこれでは不十分 vyをしらべる？
			Scene.current.player.x += @dx* dt*60
			-- Scene.current.player.x, Scene.current.player.y, _ = Scene.current.world\move(Scene.current.player, Scene.current.player.x+@dx * dt*60, Scene.current.player.y)

	registerSprite: (map)=>
		map.spritebatch\add(map.quads[0x03], lume.round(@x), lume.round(@y-@@OY))
		map.spritebatch\add(map.quads[0x04], lume.round(@x+8), lume.round(@y-@@OY))


class Memorial extends _Charactor
	new: (x, y)=>
		super(x, y, 0x20) -- 背景を取り除かず利用するものは0x20で『透明』を表示
		Scene.current.world\add(@, x, y, 16, 16)
		@idletime = 0
	
	update: (dt)=>
		@idletime += dt
		if @idletime > 0.8 then Scene.current.draw_hud = nil
	
	betouched: =>
		@idletime = 0
		if Scene.current.draw_hud == Field.__base.draw_hud then Scene.current.draw_hud = coroutine.wrap(@_draw_hud) -- draw_hudを乗っ取る

	_draw_hud: =>
		text = [[
-- CELESTE MOUNTAIN --
THIS MEMORIAL TO THOSE
 PERISHED ON THE CRIMB
]]
		letters = Map('assets/fonts/P8SCII.png', {8, 6}, {{-3, 0}, {0, 1}}, {0,0,0})
		draw = (n)->
			gr.setColor(pico8palette[8])
			gr.rectangle('fill', 11, 87,    2+5*math.min(n, 22), 9)
			if n >= 23 then gr.rectangle('fill', 11, 87+7,  2+5*lume.clamp(n-22-1, 0, 22), 9)
			if n >= 46 then gr.rectangle('fill', 11, 87+14, 2+5*lume.clamp(n-44-2, 0, 22), 9)
			letters\set(text\sub(1,n)\to2d())
			letters\draw(13, 89)
		for i=1,68
			play'assets/sounds/効果音ラボ/決定ボタンを押す38.mp3'
			for _=1,5
				draw(i)
				coroutine.yield()
		while true
			draw(68)
			coroutine.yield()

class GemBox extends _Charactor
	new: (x, y)=>
		super(x, y, 0x20)
		Scene.current.world\add(@, x, y, 16, 16)
	
	betouched: =>
		if Scene.current.field[@y/8+1][@x/8+1] != 0
			Scene.current.field[@y/8+1][@x/8+1], Scene.current.field[@y/8+1][@x/8+2] = 0, 0 --箱の蓋消える
			--ファンファーレ、ライン、背景アニメ
			@@.Gem(@x+4, @y-8)

class GemBox.Gem extends _Charactor
	new: (x, y)=>
		super(x, y, 0x7f)
		-- 出てくるアニメ(その間当たり判定なし？)
		Scene.current.world\add(@, x, y, 8, 8)
		@cy, @time = @y, 0
	
	update: (dt)=>
		@y = @cy+math.cos(@time*3)*3
		@time += dt

	betouched: =>
		play'assets/sounds/効果音ラボ/プレゼンタイトル表示1.mp3'
		Scene.current.player.boosts, Player.MaxBoosts = 2, 2
		@terminated = true

	registerSprite: (map)=>
		R = math.pi/4
		super(map)
		for i=1,8
			x, y = @x+2.5+math.sin(R*i+@time*6)*9, @y+2.5+math.cos(R*i+@time*6)*9
			map.spritebatch\add(map.quads[0x8f], lume.round(x), lume.round(y))

class SummitFlag extends _Charactor
	new: (x, y)=>
		super(x, y)
		Scene.current.world\add(@, x, y, 8, 8)

	betouched: =>
		if Scene.current.draw_hud == Field.__base.draw_hud
			play'assets/sounds/効果音ラボ/プレゼンタイトル表示1.mp3'
			Scene.current.draw_hud = @draw_hud

	registerSprite: (map)=>
		n = math.floor(love.frame_count/30)%3
		map.spritebatch\add(map.quads[rawget({0x7b, 0x8b, 0x9b}, n+1)], @x, @y)
	
	draw_hud: =>
		gr.rectangle(gr.setColor(pico8palette[1]) or 'fill', 32, 4, 64, 28)
		@resulttext or= '    x%u\n%02u:%02u:%02u\nDEATHS:%u'\format(#love.strawberrys, love.time/60/60, love.time/60%60, love.time%60, love.deaths)\to2d()
		Field.letters\set(@resulttext)
		Field.letters\draw(48, 12)
		Field.sprites\set({{0x01}})
		Field.sprites\draw(56, 8)


class Snowflake extends _Charactor
	new: (x, y)=>
		super(x, y, lume.weightedchoice({white2: 1, white: 4}), math.huge)
		@freq = lume.random(2.5, 6.5)
		@time = 0
		@cy, @r = y, lume.random(6, 16)
		@dx = lume.random(0.2, 1.8)
	
	update: (dt)=>
		@time += dt
		@y = @cy + math.cos(@time*@freq)*@r
		@x += @dx
		if @x > 128
			@x -= 129 -- size2まで
			@y = math.random(0, 127)

Snowflake.deploy = (n)-> [Snowflake(math.random(0,127), math.random(0,127)) for _ = 1, n]

class Wind extends _Charactor
	@W, @H = 64, 8
	@Color = pico8palette[2]
	new: (x, y)=>
		super(x, y)
		@dx = lume.random(1.5, 2.5)
	
	update: (dt)=>
		@x += @dx * dt*60
		if @x > 128
			@x -= 128 + @@W
			@y = math.random(0, 127)

	registerSprite: => gr.rectangle(gr.setColor(@@Color) or 'fill', @x, @y, @@W, @@H) -- Spriteを使わずにこの時点で描画するので一番うしろになる

Wind.deploy = (n)-> [Wind(math.random(0,127), math.random(0,127)) for _ = 1, n]

class Smoke extends _Charactor
	new: (x, y)=>
		super(x, y, 0x90, 5)
		@starttime = love.frame_count
	
	update: (dt)=>
		@x += dt*30
		if love.frame_count - @starttime > 13 then @sprite = 0xa0
		if love.frame_count - @starttime > 30 then @terminated = true


class Player extends _Charactor
	@Gravity= 0.10--0.14
	@Max = 1.4
	-- @MaxB = 2.8
	@MaxBoosts = 1
	@OX, @OY, @W, @H = 1, 2, 6, 6 -- OX, OYはスプライトとAABBのズレ(動かないものは必要なし→playerと雲だけ)
	new: (x, y)=>
		super(x+@@OX, y+@@OY, 0x10, 1)
		Scene.current.world\add(@, x+@@OX, y+@@OY, @@W, @@H) --6, 8-@@OY)
		@direction = 3
		@vx, @vy = 0, 0
		@boosts  = @@MaxBoosts
		@update = @updateJumping
		@sprite_index = 0.99
		@hairs = {}

	move_checkCollision: (dt)=>
		-- @vx, @vy = lume.clamp(@vx, -@@Max, @@Max), lume.clamp(@vy, -3.5, @@Max)
		@x, @y, cols = Scene.current.world\move(@, @x + @vx * dt*60, @y + @vy * dt*60 + 0.01, (other)=> -- ちくわブロックを作用させるためにyにepsを足している
			if other.__class == Cloud and @y > other.y-Player.H then nil
			elseif issubclass(other.__class, _Block) or other.__class == Spike or other.__class == SideWall then 'slide'
			else 'cross'
			)
		@sliding = false -- 雪を掴んでいるか(氷の場合は普通の重力加速度が加わる)
		for col in *cols
			if lume.find({Ceil, Floor, Spike, Strawberry, FlatteringStrawberry, Key, Balloon, JumpBlock, FragileBlock, BreakableWall, Memorial, GemBox, GemBox.Gem, SummitFlag}, col.other.__class) then col.other\betouched(col)
			if issubclass(col.other.__class, _Block) and col.other.__class != JumpBlock
				if col.normal.y < 0 and @update == @updateJumping or @update == @updateSliding then @land()
				if col.normal.y > 0 then @vy = 0 -- 頭ぶつけた
				if @vy > 0 and col.normal.x < 0 and input.Right() and @update == @updateJumping then @update = @updateSliding
				if @vy > 0 and col.normal.x > 0 and input.Left()  and @update == @updateJumping then @update = @updateSliding
				@sliding or= 0x1c <= col.other.sprite and col.other.sprite <= 0x31
			if col.normal.x != 0 and (issubclass(col.other.__class, _Block) or col.other.__class == SideWall)
				if @update != @@__base.update and @update != @updateJumping and @update != @updateSliding then
					@update = @updateJumping -- boostと壁キックは、壁についたら終わり
					@vx = 0

	walk: (dt, accel)=> -- 左右移動
		if d := input.arrowkeys({1, nil, 3, nil}) -- 加速
			@direction = d
			if -@@Max < @vx and @vx < @@Max then @vx = lume.clamp(@vx + rawget({-accel, nil, accel}, d) * dt*60, -@@Max, @@Max)
			else @vx *= 0.8 -- boostを使って最高速度より早いとき、最高速度まで下げる -- todo ここ不要になった。
		else @vx *= 0.8 -- 減速
		if math.abs(@vx) < 0.01 then @vx = 0
	
	update: (dt)=> -- updateWalkingにあたる
		@walk(dt, 0.16)
		@move_checkCollision(dt)
		@sprite_index += math.abs(@vx * dt*60/30)
		if #Scene.current.world\queryRect(@x, @y+8, 6, 1, (c)-> issubclass(c.__class, _Block)) == 0 then @update = @updateJumping -- 踏み外す
		if input.Ap() and #Scene.current.world\queryRect(@x, @y+8, 7, 1, (c)-> issubclass(c.__class, _Block)) > 0 then _, _ = @jump(), play'assets/sounds/効果音ラボ/カーソル移動3.mp3' -- ジャンプ台を使ったときは別の音がなる
		if input.BXYp() then @boost() -- ボタン配置のちがうジョイスティックでもなんとかできるように

	updateJumping: (dt)=>
		@walk(dt, 0.12)
		@vy = math.min(@vy + @@Gravity * dt*60, 1.5) -- max 落下速度
		@move_checkCollision(dt)
		if input.BXYp() then @boost()
	
	_updateBoosting: (dt)=>
		A, B = 2, 2/math.sqrt(2)
		{@vx, @vy} = rawget({[0]: {(@direction-2)*A, -.1}, {-A, -.1}, {A, -.1}, {0, -.1}, {0, -A}, {-B, -B}, {B, -B}, {0, -A}, {0, A}, {-2, 2}, {2, 2}, {0, A}, {0, -.1}, {-A, -.1}, {A, -.1}, {0, 0}}, input.arrowkeys8())
		for i=1,10
			@move_checkCollision(dt)
			_, dt = coroutine.yield()
		@update = @updateJumping

	updateSliding: (dt)=>
		@vy = if @sliding then math.min(@vy + @@Gravity/8 * dt*60, 0.3) else math.min(@vy + @@Gravity * dt*60, 1.5) -- max 落下速度
		@update = @updateJumping -- f_sliding = falseの意味。次行の中でupdateSlidingに再び指定される
		@move_checkCollision(dt)
		if input.Ap() then @update = coroutine.wrap(@_updateWallKicked)
		if input.BXYp() then @boost()

	_updateWallKicked: (dt)=>
		play'assets/sounds/効果音ラボ/カーソル移動3.mp3'
		@vx, @vy = (@direction-2)*-@@Max, -@@Max*4/5
		for i=1,7
			@move_checkCollision(dt)
			_, dt = coroutine.yield()
		@update = @updateJumping
		
	jump: (vy = -2.0--[[-2.4]])=>
		@vy = vy
		@update = @updateJumping

	land: =>
		@vy = 0
		@boosts = @@MaxBoosts
		@update = nil
	
	boost: =>
		if @boosts <= 0 then return play'assets/sounds/効果音ラボ/ビープ音2.mp3'
		Scene.current\shake()
		play'assets/sounds/効果音ラボ/キャンセル6.mp3'
		@boosts -= 1
		A = .6
		for c in *Scene.current.charactors do c\player_dashed?() -- 羽イチゴが逃げる
		@update = coroutine.wrap(@_updateBoosting)
		Smoke(@x, @y)

	death: => Scene.current.update = coroutine.wrap(Scene.current._update_onDied)

	registerSprite: (map)=>
		id = if @update == @updateSliding then 0x16
		elseif @update == @updateJumping then 0x13
		elseif input.Up() then 0x14 elseif input.Down() then 0x15
		else 0x10 + math.floor(@sprite_index) % 3
		n = rawget({[0]: 0xb0, [1]: 0, [2]: rawget({0xc0, 0xd0}, idiv(love.frame_count, 8)%2+1)}, @boosts) -- 髪色=ダッシュできる数
		-- if #@hairs > 1 then map.spritebatch\add(map.quads[0x18 + n], lume.round(@hairs[#@hairs-1][1]+rawget({1,nil,-1},@direction)), lume.round(@hairs[#@hairs-1][2]+1-@@OY))
		if #@hairs > 0 then map.spritebatch\add(map.quads[0x18 + n], lume.round(@hairs[#@hairs][1]+rawget({4,nil,-1},@direction)-Player.OX), lume.round(@hairs[#@hairs][2]+1-Player.OY))
		@hairs = lume.concat(@hairs, {{@x, @y}}) |> lume.last(3)
		map.spritebatch\add(map.quads[id + n], lume.round(@x-Player.OX), lume.round(@y-Player.OY), 0, unpack rawget([1]: {-1,1,6}, [3]: {}, @direction))
		if math.abs(@vx) < 0.04 then @sprite_index = 0.99
		
class Player.Died extends _Charactor
	new: (x, y)=>
		super(x+4, y+4, nil, math.huge)
		@vy = 0
		@starttime = love.frame_count
		play'assets/sounds/効果音ラボ/ビープ音4.mp3'

	registerSprite: (map)=>
		id = (if love.frame_count - @starttime <= 8 then 0xf0 else 0xf2) + love.frame_count % 2
		for i=1,8
			x, y = @x+math.sin(i*math.pi/4)*(love.frame_count-@starttime), @y+math.cos(i*math.pi/4)*(love.frame_count-@starttime)
			map.spritebatch\add(map.quads[id], lume.round(x), lume.round(y))


Scene.sprites = with Map('assets/Cel0BGSPR.png', {8, 8}) -- ベースクラスを外から改造できてしまう
	.quads['white'] = gr.newQuad(0,24,1,1,128,128) -- 白1ドット
	.quads['white2'] = gr.newQuad(0,24,2,2,128,128) -- 白2ドット
Scene.letters = Map('assets/fonts/P8SCII2.png', {8, 6}, {{-4, 0}, {0, 0}})

macro C = (c)-> "#{string.byte(c)}" --"#{utf8.codepoint(c)}" -- 文字コードにする

-- bgもcharactorクラスからの派生にすると、風から雪からhudまですべて同一視できるが……コード行が増える
class Field extends Scene
	@BGColor = pico8palette[1]
	new: (@level)=>
		super()
		Scene.current = @ -- 重ねない。attachも兼ねる(すぐにScene.currentを使えるようにする)
		@world = bump.newWorld(8)
		@charactors = {}
		_, _, _, _, _, _ = SideWall(-16, 0), SideWall(128, 0), Floor(), Ceil(), Snowflake.deploy(25), Wind.deploy(5)
		{subtitle: @subtitle, bgm: bgm, startpos: startpos, field: _field, setup: setup } = LevelData[@level]
		@field = [lume.clone(row) for row in *_field] -- _fieldを変更するのでdeepcopyしておく
		for j, row in ipairs @field -- fieldデータ内でオブジェクトを表すものを取り除いてObjectを生成する
			for i, cell in ipairs row
				switch cell
					when $C(@), $C(A), $C(B), $C(C) then Spike((i-1)*8, (j-1)*8, cell,  rawset(@field[j], i, 0x20)) -- CodeGolf: 背景データから除去するのを使っていない引数の場所でやっている
					when $C(D) then FragileBlock((i-1)*8, (j-1)*8,  rawset(@field[j], i, 0x20))
					when $C(E) then JumpBlock((i-1)*8, (j-1)*8,  rawset(@field[j], i, 0x20))
					when $C(F)
						jumpblock = JumpBlock((i-1)*8, (j-1)*8,  rawset(@field[j], i, 0x20))
						with f = FragileBlock((i-1)*8, (j  )*8,  rawset(@field[j], i, 0x20))
							jumpblock.linkedFragileBlock = f
							.linkedJumpBlock = jumpblock
					when $C(u) then Memorial((i-1)*8, (j-1)*8)
					when $C(q) then GemBox((i-1)*8, (j-1)*8)
					when 0x7b then SummitFlag((i-1)*8+5, (j-1)*8,  rawset(@field[j], i, 0x20))
					else if 0x20 < cell and cell <= 0x3f then PlatformBlock((i-1)*8, (j-1)*8, cell,  rawset(@field[j], i, 0x20))
		lume.push(@charactors, setup?())
		@player = with _Charactor(startpos[1], startpos[2], 0x20, math.huge) -- (スポーンのアニメのために)当たり判定のないものを作る
			.direction, .vx, .vy, .sprite_index, .boosts, .hairs = 3, 0, -1, 1, 1, {}
		BGM(bgm)
		@subtitle_start = love.frame_count
		@shake_start = 0
		@update = coroutine.wrap(@_update_start)


	update: (dt)=>
		love.time += dt
		for c in *@charactors do c\update(dt)
		-- @player\update(dt)
		@charactors = [c for c in *@charactors when c.terminated == nil]

	_update_start: (dt)=>
		play'assets/sounds/効果音ラボ/シーン切り替え1.mp3'
		t = with tween.new(0.7, @player, {y: @player.y}, 'outBack')
			@player.registerSprite, @player.sprite, @player.y = Player.__base.registerSprite, 0x10, 128
			.onfinish = -> @player.terminated, @player = true, Player(@player.x, @player.y)
		while not t\update(dt)
			for c in *@charactors do c\update(dt) -- @__class.__base.update(@, dt) -- super() player動かせない間はRTAtimeを加算しない？
			_, dt = coroutine.yield()
		-- @shake()
		@update = nil

	_update_onDied: (dt)=>
		@shake()
		@world\remove(@player)
		@charactors = [c for c in *@charactors when c != @player]-- @player.terminated = true ここはすぐ削除して、すぐ変わりを作る
		@player = Player.Died(@player.x, @player.y)
		for _i=1,20 do
			for c in *@charactors do c\update(dt) -- @__class.__base.update(@, dt) -- super()
			-- @player\update(dt)
			_, dt = coroutine.yield()
		love.deaths += 1
		Field(@level)

	shake: => @shake_start = love.frame_count
	@Offsets = {{1, 1}, {-1, -1}, {1, 0}, {0, 1}, {0, 0}}

	draw: =>
		if love.frame_count -  @shake_start <= #@@Offsets-1 then gr.translate(unpack @@Offsets[love.frame_count -  @shake_start + 1])
		gr.clear(@@BGColor)
		@@sprites.spritebatch\clear()
		@@sprites\set(@field)
		for c in *lume.sort(@charactors, 'z')
			c\registerSprite(@@sprites)
		@@sprites\draw(0, 0)
		@draw_hud()
	
	draw_hud: =>
		if love.frame_count - @subtitle_start > 80 then return
		@hud_timetext or= '%02u:%02u:%02u'\format(love.time/60/60, love.time/60%60, love.time%60)\to2d()
		gr.rectangle(gr.setColor(0,0,0) or 'fill', 4, 4, 33, 7)
		@@letters\set(@hud_timetext)
		@@letters\draw(5, 5)
		gr.rectangle(gr.setColor(0,0,0) or 'fill', 32, 57, 64, 13)
		@hud_leveltext or= @subtitle\to2d()
		@@letters\set(@hud_leveltext)
		@@letters\draw(52, 61)
	

class Title extends Scene
	new: =>
		@title = gr.newImage('assets/Cel0Title.png')
		@color = {0,0,0,0}
	attach: =>
		super()
		@charactors = {}
		Snowflake.deploy(20)

	update: (dt)=>
		for c in *@charactors do c\update(dt)
		if input.Ar() or input.Br() then @update = coroutine.wrap(@_updateFadeOut)

	_updateFadeOut: (dt)=>
		play'assets/sounds/効果音ラボ/決定ボタンを押す8.mp3'
		t = tween.new(1.0, @color, {.5, 0, 0, 0.3}, 'outBounce')
		while not t\update(dt)
			for c in *@charactors do c\update(dt)
			_, dt = coroutine.yield()
		Field(1)

	draw: =>
		gr.clear(pico8palette[1])
		gr.draw(@title, 36, 16)
		-- @@letters\set('   X + Z\n\nMATT THORSON\n NOEL BERRY'\to2d())
		@@letters\set('   X + Z'\to2d())
		@@letters\draw(40, 64)
		@@sprites.spritebatch\clear()
		for c in *@charactors do c\registerSprite(@@sprites)
		@@sprites\draw(0, 0)
		gr.rectangle(gr.setColor(@color) or 'fill', 0, 0, 128, 128)


love.load = ->
	vudu?.initialize()
	vudu?.initializeDefaultHotkeys()
	love.time, love.deaths, love.strawberrys = 0, 0, {}
	-- Title()\attach()
	Field(1)

	if DEBUGMODE -- hotswap
		Watchdog{
			"#{$FILE}": -> Watchdog.transpile("#{$FILE}", 'main.lua')
			'ui.yue': -> Watchdog.transpile('ui.yue')
			'input.yue': -> Watchdog.transpile('input.yue')
			-- 'color.yue': -> Watchdog.transpile('color.yue')
			'utl.yue': -> Watchdog.transpile('utl.yue')
			'bigmap.yue': -> Watchdog.transpile('bigmap.yue')
			-- 'BDF.yue': -> Watchdog.transpile('BDF.yue')
			-- 'distribute.yue': -> Watchdog.transpile('distribute.yue')
			'main.lua': -> lume.hotswap('main')
			'input.lua': -> lume.hotswap('input')
			'ui.lua': -> lume.hotswap('ui')
			-- 'color.lua': -> lume.hotswap('color')
			'utl.lua': -> lume.hotswap('utl')
			'bigmap.lua': -> lume.hotswap('bigmap')
			-- 'BDF.lua': -> lume.hotswap('BDF')
			-- 'distribute.lua': -> lume.hotswap('distribute')
			}
	if DEBUGMODE -- build
		love.thread.newThread([[
_G.PROJECTNAME, _G.VERSION, description = ...
require('distribute').build({'lib/bump.lua', 'color.lua' })
require('distribute').modify_index_html(require('lib.os_capture').capture('echo \''..description..'\' | pandoc -f markdown -t html'))
]])\start PROJECTNAME, VERSION, "

<style>body{color: #1a1a20; background-color: #fffbe1;}</style>
<link rel=stylesheet href='https://fonts.googleapis.com/css?family=Roboto:300,300italic,700,700italic'>
<div class=row><div class='col m12'>

Playerを『気持ちよく』動かす調整って難しい。

## Todo List

- [ ] 氷の壁でスライディング中の落下速度

</div></div>"
